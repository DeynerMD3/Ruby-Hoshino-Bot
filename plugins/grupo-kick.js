import { areJidsSameUser } from '@whiskeysockets/baileys';

const emoji = 'üëª';
const emoji2 = 'üìú';
const emoji3 = '‚ö∞Ô∏è';
const advertencia = '‚ö†Ô∏è';

const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

var handler = async (m, { conn, participants, command, text }) => {
  const miembros = participants.map(u => u.id);
  const cantidad = text && !isNaN(text) ? parseInt(text) : miembros.length;

  let fantasmas = [];

  for (let i = 0; i < cantidad; i++) {
    let id = miembros[i];
    let user = global.db.data.users[id] || {};
    let participante = participants.find(p => areJidsSameUser(p.id, id));
    let esAdmin = participante?.admin === 'admin' || participante?.admin === 'superadmin';

    if (!esAdmin && (!user.chat || user.chat === 0) && !user.whitelist) {
      fantasmas.push(id);
    }
  }

  if (command === 'fantasmas') {
    if (fantasmas.length === 0) {
      return conn.reply(m.chat, `${emoji} *¬°Este grupo est√° lleno de vida!* No se han detectado fantasmas.`, m);
    }

    const texto = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî ùîªùîºùïãùîº‚ÑÇùïãùî∏ùîªùïÜ‚Ñù üëª „Äï‚îÅ‚îÅ‚¨£
‚îÉ  ${emoji2} *Lista de Fantasmas Inactivos:*
${fantasmas.map(u => '‚îÉ  ‚ú¶ @' + u.split('@')[0]).join('\n')}
‚îÉ  
‚îÉ  ${advertencia} *Nota:*
‚îÉ  Esta lista puede no ser 100% exacta.
‚îÉ  Solo se cuentan usuarios desde que el bot se a√±adi√≥.
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¨£`;

    return conn.reply(m.chat, texto, m, { mentions: fantasmas });
  }

  if (command === 'kickfantasmas') {
    if (fantasmas.length === 0) {
      return conn.reply(m.chat, `${emoji} *No hay fantasmas que eliminar*, el grupo est√° activo.`, m);
    }

    const advertenciaTexto = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„Äî ùîºùïÉùïÄùïÑùïÄ‚Ñïùî∏‚ÑÇùïÄ√ì‚Ñï ‚ö∞Ô∏è „Äï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚¨£
‚îÉ  Se han detectado *${fantasmas.length} fantasmas* üëª
‚îÉ  Iniciando purga en *10 segundos...*
‚îÉ  
‚îÉ  ${emoji2} *Lista:*
${fantasmas.map(u => '‚îÉ  ‚ä≥ @' + u.split('@')[0]).join('\n')}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¨£`;

    await conn.reply(m.chat, advertenciaTexto, m, { mentions: fantasmas });
    await delay(10000);

    const chat = global.db.data.chats[m.chat];
    chat.welcome = false;

    try {
      for (let id of fantasmas) {
        const participante = participants.find(p => areJidsSameUser(p.id, id));
        const esAdmin = participante?.admin === 'admin' || participante?.admin === 'superadmin';
        if (!esAdmin) {
          await conn.groupParticipantsUpdate(m.chat, [id], 'remove');
          await delay(4000);
        }
      }
    } catch (e) {
      console.error('[‚ùå ERROR AL EXPULSAR]', e);
    } finally {
      chat.welcome = true;
    }
  }
};

handler.tags = ['grupo'];
handler.command = ['fantasmas', 'kickfantasmas'];
handler.group = true;
handler.botAdmin = true;
handler.admin = true;

export default handler;
