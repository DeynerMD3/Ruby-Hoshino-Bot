import translate from '@vitalets/google-translate-api';
import fetch from 'node-fetch';

const newsletterJid  = '120363335626706839@newsletter';
const newsletterName = '⏤͟͞ू⃪፝͜⁞⟡『 𝐓͢ᴇ𝙖፝ᴍ⃨ 𝘾𝒉꯭𝐚𝑛𝑛𝒆𝑙: 𝑹ᴜ⃜ɓ𝑦-𝑯ᴏ𝒔𝑯𝙞꯭𝑛𝒐 』࿐⟡';

let handler = async (m, { conn, args, usedPrefix, command }) => {
  const contextInfo = {
    mentionedJid: [m.sender],
    isForwarded: true,
    forwardingScore: 999,
    forwardedNewsletterMessageInfo: {
      newsletterJid,
      newsletterName,
      serverMessageId: -1
    },
    externalAdReply: {
      title: botname,
      body: wm,
      thumbnail: icons,
      sourceUrl: redes,
      mediaType: 1,
      renderLargerThumbnail: false
    }
  };

  const prompt = args.join(' ');
  if (!prompt) {
    return conn.reply(
      m.chat,
      `🌸 *Onii-chan~ dime qué imagen deseas ver en estilo anime...* (◕‿◕✿)\n\n🌼 *Ejemplo:* \n\`${usedPrefix + command} Una chica mágica con cabello azul y ojos brillantes en un bosque encantado\``,
      m,
      { contextInfo, quoted: m }
    );
  }

  try {
    // Traducir el prompt al inglés sin mostrarlo
    const { text: translatedPrompt } = await translate(prompt, { to: 'en', autoCorrect: true });

    // Mensaje kawaii mientras carga
    await conn.reply(m.chat, `🎨 *Generando tu imagen en estilo anime...* ✨\n(⌒‿⌒) 〰️`, m, { contextInfo, quoted: m });

    // API de imagen
    const apiUrl = `https://api.vreden.my.id/api/artificial/animagine?prompt=${encodeURIComponent(translatedPrompt)}`;
    const res = await fetch(apiUrl);
    const json = await res.json();

    const imageUrl = json?.result?.output?.data?.[0]?.image?.url;
    if (!imageUrl) throw new Error('No se pudo generar la imagen.');

    await conn.sendMessage(m.chat, {
      image: { url: imageUrl },
      caption: `╭───────❍𓂃⟡🌸⟡𓂃❍───────╮  
🌸 *¡Aquí tienes tu imagen generada!* ✨  
╰─────────────⊹⊱✿⊰⊹─────────────╯

╭─⃟ 🖌️ *Prompt:*  
│ ↳ ᯓ ${prompt}
╰─────────────────────

╭─⃟ 📦 *Modelo:*  
│ ↳ ᯓ Animagine XL 3.1  
╰─────────────────────`,
      mimetype: 'image/png'
    }, { quoted: m, contextInfo });

  } catch (e) {
    console.error(e);
    conn.reply(m.chat, `😿 *Ocurrió un error al generar tu imagen...*\n\`\`\`${e.message}\`\`\``, m, { contextInfo, quoted: m });
  }
};

handler.help = ['aianime'].map(v => v + ' <texto>');
handler.tags = ['ai', 'anime'];
handler.command = ['animegine', 'imageanime'];
handler.limit = true;
handler.coin = 3;
handler.register = true;

export default handler;